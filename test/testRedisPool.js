// Generated by CoffeeScript 1.7.1
var Pool, RedisPool, eventEmitter, factory, redis, should, sinon;

should = require("should");

sinon = require("sinon");

Pool = require("../lib/pool.js");

eventEmitter = require('events').EventEmitter;

redis = require('redis');

factory = {
  name: "redis",
  create: function(callback) {
    var cachedClient;
    cachedClient = redis.createClient();
    cachedClient.on("error", function(err) {
      return console.log("error during process" + err);
    });
    return callback(null, cachedClient);
  },
  destroy: function() {
    return cachedClient.end();
  },
  idleTimeoutMillis: 3000,
  log: false,
  max: 10,
  min: 0
};

RedisPool = Pool.Pool(factory);

describe("test RedisPool now", function() {
  beforeEach(function() {
    return RedisPool.execcmd("flushdb", function(err, result) {
      if (err) {
        return console.log("flushdb error");
      }
    });
  });
  it("test redisRedisPool hmset cmd", function(done) {
    return RedisPool.execcmd("hmset", "student", "name", "Jim", "location", "beijing", function(err, result) {
      if (err) {
        return done(err);
      } else {
        console.log(result);
        result.should.equal("OK");
        return RedisPool.execcmd("hgetall", "student", function(err, res) {
          if (err) {
            return done(err);
          } else {
            console.log(res);
            res.should.eql({
              "name": "Jim",
              "location": "beijing"
            });
            return done();
          }
        });
      }
    });
  });
  it("test redisRedisPool rename", function(done) {
    return RedisPool.execcmd("set", "hainan", "haikou", function(err, result) {
      if (err) {
        return done(err);
      } else {
        return RedisPool.execcmd("rename", "hainan", "renamekey", function(err, result) {
          if (err) {
            return done(err);
          } else {
            result.should.equal("OK");
            return RedisPool.execcmd("get", "renamekey", function(err, res) {
              if (err) {
                done(err);
              } else {
                console.log(res);
                res.should.equal("haikou");
              }
              return done();
            });
          }
        });
      }
    });
  });
  it("test redisRedisPool hdel", function(done) {
    return RedisPool.execcmd("hmset", "student", "name", "Jim", "location", "beijing", function(err, result) {
      if (err) {
        return done(err);
      } else {
        return RedisPool.execcmd("hdel", "student", "location", "beijing", function(err, result) {
          if (err) {
            return done(err);
          } else {
            return RedisPool.execcmd("hgetall", "student", function(err, res) {
              if (err) {
                return done(err);
              } else {
                res.should.eql({
                  "name": "Jim"
                });
                return done();
              }
            });
          }
        });
      }
    });
  });
  return it("test redisRedisPool push and pop", function(done) {
    return RedisPool.execcmd("lpush", "city", "shanghai", "beijing", function(err, result) {
      if (err) {
        return done(err);
      } else {
        return RedisPool.execcmd("rpop", "city", function(err, res) {
          if (err) {
            return done(err);
          } else {
            res.should.equal("shanghai");
            return done();
          }
        });
      }
    });
  });
});
