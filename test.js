// Generated by CoffeeScript 1.7.1
var Pool, eventEmitter, factory, redis, should, sinon;

should = require("should");

sinon = require("sinon");

Pool = require("./pool.js");

eventEmitter = require('events').EventEmitter;

redis = require('redis');

factory = {
  name: "redis",
  create: function(callback) {
    var cachedClient;
    cachedClient = redis.createClient();
    console.log(cachedClient.toString());
    console.log("******" + cachedClient + "*******");
    cachedClient.on("error", function(err) {
      return console.log("error during process" + err);
    });
    return callback(null, cachedClient);
  },
  destroy: function() {
    return cachedClient.end();
  },
  idleTimeoutMillis: 3000,
  log: false,
  max: 10,
  min: 0
};

describe("test pool create", function() {
  return it("test pool create", function(done) {
    var RedisPool, mockClient;
    mockClient = {
      name: "mockclient"
    };
    mockClient = new eventEmitter();
    sinon.stub(redis, "createClient", function() {
      return mockClient;
    });
    mockClient.set = sinon.spy(function(args, callback) {
      console.log(args);
      return callback(null, "OK");
    });
    RedisPool = Pool.Pool(factory);
    return RedisPool.execcmd("set", "testkey", "testvalue", function(err, result) {
      console.log(err);
      console.log(result);
      result.should.equal("OK");
      return done();
    });
  });
});
