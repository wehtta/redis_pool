// Generated by CoffeeScript 1.7.1
var Pool, should, sinon;

should = require("should");

Pool = require("./redispool.js");

sinon = require("sinon");

describe("function behaviour test", function() {
  return it("unit test Pool.acquire", function(done) {
    var spy, spy1, spy2;
    spy = sinon.spy(Pool, "acquire");
    spy1 = sinon.spy(Pool, "release");
    spy2 = sinon.spy(Pool, "destroy");
    return Pool.execcmd("flushdb", function(err, result) {
      if (err) {
        return done(err);
      } else {
        spy.calledOnce.should.equal(true);
        spy1.called.should.equal(true);
        return done();
      }
    });
  });
});

describe("test RedisPool", function() {
  before(function(done) {
    return Pool.execcmd("flushdb", function(err, result) {
      if (err) {
        return done(err);
      } else {
        console.log("clear redis data");
        result.should.equal("OK");
        return done();
      }
    });
  });
  it("test redis set cmd and renamecmd", function(done) {
    return Pool.execcmd("set", "hainan", "haikou", function(err, result) {
      if (err) {
        return done(err);
      } else {
        result.should.equal("OK");
        return done();
      }
    });
  });
  it("test redispool hmset cmd", function(done) {
    return Pool.execcmd("hmset", "student", "name", "Jim", "location", "beijing", function(err, result) {
      if (err) {
        return done(err);
      } else {
        console.log(result);
        result.should.equal("OK");
        return Pool.execcmd("hgetall", "student", function(err, res) {
          if (err) {
            return done(err);
          } else {
            console.log(res);
            res.should.eql({
              "name": "Jim",
              "location": "beijing"
            });
            return done();
          }
        });
      }
    });
  });
  it("test redispool rename", function(done) {
    return Pool.execcmd("rename", "hainan", "renamekey", function(err, result) {
      if (err) {
        return done(err);
      } else {
        result.should.equal("OK");
        return Pool.execcmd("get", "renamekey", function(err, res) {
          if (err) {
            return done(err);
          } else {
            console.log(res);
            res.should.equal("haikou");
            return done();
          }
        });
      }
    });
  });
  it("test redispool hdel", function(done) {
    return Pool.execcmd("hdel", "student", "location", "beijing", function(err, result) {
      if (err) {
        return done(err);
      } else {
        return Pool.execcmd("hgetall", "student", function(err, res) {
          if (err) {
            return done(err);
          } else {
            res.should.eql({
              "name": "Jim"
            });
            return done();
          }
        });
      }
    });
  });
  return it("test redispool push and pop", function(done) {
    return Pool.execcmd("lpush", "city", "shanghai", "beijing", function(err, result) {
      if (err) {
        return done(err);
      } else {
        return Pool.execcmd("rpop", "city", function(err, res) {
          if (err) {
            return done(err);
          } else {
            res.should.equal("shanghai");
            return done();
          }
        });
      }
    });
  });
});
